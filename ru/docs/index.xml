<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs on WebRTC для любопытных</title><link>https://webrtcforthecurious.com/ru/docs/</link><description>Recent content in Docs on WebRTC для любопытных</description><generator>Hugo</generator><language>ru</language><atom:link href="https://webrtcforthecurious.com/ru/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Что, Зачем и Как</title><link>https://webrtcforthecurious.com/ru/docs/01-what-why-and-how/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://webrtcforthecurious.com/ru/docs/01-what-why-and-how/</guid><description>Что, Зачем и Как # Что такое WebRTC? # WebRTC, сокращение от Web Real-Time Communication, это одновременно и API, и Протокол. Протокол WebRTC - это набор правил для двух агентов WebRTC для согласования двунаправленной безопасной связи в реальном времени. API WebRTC позволяет разработчикам использовать протокол WebRTC. API WebRTC определен только для JavaScript.
Похожие отношения можно провести между HTTP и Fetch API. WebRTC как протокол будет HTTP, а WebRTC как API будет Fetch API.</description></item><item><title>Сигнализация</title><link>https://webrtcforthecurious.com/ru/docs/02-signaling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://webrtcforthecurious.com/ru/docs/02-signaling/</guid><description>Сигнализация # Что такое сигнализация WebRTC? # Когда вы создаете агента WebRTC, он ничего не знает о другом пире. У него нет представления, с кем он будет подключаться или что будет отправляться! Сигнализация - это начальная загрузка, которая делает вызов возможным. После обмена этими значениями WebRTC-агенты могут напрямую общаться друг с другом.
Сигнальные сообщения - это просто текст. WebRTC-агенты не заботятся о том, как они передаются. Обычно они передаются через Websockets, но это не является обязательным требованием.</description></item><item><title>Подключение</title><link>https://webrtcforthecurious.com/ru/docs/03-connecting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://webrtcforthecurious.com/ru/docs/03-connecting/</guid><description>Подключение # Почему WebRTC нужна выделенная подсистема для подключения? # Большинство приложений, развернутых сегодня, устанавливают клиент-серверные соединения. Клиент-серверное соединение требует, чтобы сервер имел стабильный, известный транспортный адрес. Клиент связывается с сервером, и сервер отвечает.
WebRTC не использует клиент-серверную модель, а устанавливает одноранговые (P2P) соединения. В P2P-соединении задача создания соединения равномерно распределена между обоими пирами. Это связано с тем, что транспортный адрес (IP и порт) в WebRTC не может быть предположен и может даже измениться во время сеанса.</description></item><item><title>Защита</title><link>https://webrtcforthecurious.com/ru/docs/04-securing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://webrtcforthecurious.com/ru/docs/04-securing/</guid><description>Защита # Какую безопасность имеет WebRTC? # Каждое WebRTC-соединение аутентифицировано и зашифровано. Вы можете быть уверены, что третья сторона не может видеть, что вы отправляете, или вставлять поддельные сообщения. Вы также можете быть уверены, что WebRTC-агент, который сгенерировал Session Description, - тот, с кем вы общаетесь.
Очень важно, чтобы никто не изменял эти сообщения. Нормально, если третья сторона читает Session Description в транзите. Однако WebRTC не защищает от его изменения.</description></item><item><title>Сетевое взаимодействие в реальном времени</title><link>https://webrtcforthecurious.com/ru/docs/05-real-time-networking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://webrtcforthecurious.com/ru/docs/05-real-time-networking/</guid><description>Сетевое взаимодействие в реальном времени # Почему сетевое взаимодействие так важно в коммуникации в реальном времени? # Сети являются ограничивающим фактором в коммуникации в реальном времени. В идеальном мире у нас была бы неограниченная пропускная способность, и пакеты прибывали бы мгновенно. Но это не так. Сети ограничены, и условия могут измениться в любой момент. Измерение и наблюдение сетевых условий также является сложной проблемой. Вы можете получить разное поведение в зависимости от оборудования, программного обеспечения и его конфигурации.</description></item><item><title>Медиа-коммуникация</title><link>https://webrtcforthecurious.com/ru/docs/06-media-communication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://webrtcforthecurious.com/ru/docs/06-media-communication/</guid><description>Медиа-коммуникация # Что я получаю от медиа-коммуникации WebRTC? # WebRTC позволяет отправлять и получать неограниченное количество аудио- и видеопотоков. Вы можете добавлять и удалять эти потоки в любой момент во время вызова. Эти потоки могут быть полностью независимыми или объединенными! Вы можете отправлять видеопоток рабочего стола и одновременно включать аудио и видео с веб-камеры.
Протокол WebRTC не зависит от кодека. Базовый транспорт поддерживает все, даже то, что еще не существует!</description></item><item><title>Коммуникация данных</title><link>https://webrtcforthecurious.com/ru/docs/07-data-communication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://webrtcforthecurious.com/ru/docs/07-data-communication/</guid><description>Коммуникация данных # Что я получаю от коммуникации данных WebRTC? # WebRTC предоставляет каналы данных для обмена данными. Между двумя пирами вы можете открыть 65 534 канала данных. Канал данных основан на датаграммах, и у каждого есть свои настройки надежности. По умолчанию каждый канал данных имеет гарантированную упорядоченную доставку.
Если вы подходите к WebRTC с точки зрения медиа, каналы данных могут показаться бесполезными. Зачем вам вся эта подсистема, когда вы могли бы просто использовать HTTP или WebSocket?</description></item><item><title>Прикладной WebRTC</title><link>https://webrtcforthecurious.com/ru/docs/08-applied-webrtc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://webrtcforthecurious.com/ru/docs/08-applied-webrtc/</guid><description>Прикладной WebRTC # Теперь, когда вы знаете, как работает WebRTC, пришло время строить с его помощью! Эта глава исследует, что люди создают с помощью WebRTC, и как они это делают. Вы узнаете все интересные вещи, происходящие с WebRTC. Мощь WebRTC дается ценой. Создание производственных сервисов WebRTC - это сложная задача. Эта глава попытается объяснить эти сложности, прежде чем вы с ними столкнетесь.
По случаям использования # Многие думают, что WebRTC - это просто технология для видеоконференций в веб-браузере.</description></item><item><title>Отладка</title><link>https://webrtcforthecurious.com/ru/docs/09-debugging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://webrtcforthecurious.com/ru/docs/09-debugging/</guid><description>Отладка # Отладка WebRTC может быть сложной задачей. Существует много подвижных частей, и они могут ломаться независимо. Если вы не будете осторожны, вы можете потерять недели, глядя не на те вещи. Когда вы наконец найдете сломанную часть, вам придется кое-что изучить, чтобы понять почему.
Эта глава поможет вам настроиться на отладку WebRTC. Она покажет, как разбить проблему на составляющие. После того, как мы поймем проблему, мы быстро обзорно рассмотрим популярные инструменты отладки.</description></item><item><title>История</title><link>https://webrtcforthecurious.com/ru/docs/10-history-of-webrtc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://webrtcforthecurious.com/ru/docs/10-history-of-webrtc/</guid><description>История # При изучении WebRTC разработчики часто чувствуют разочарование из-за сложности. Они видят функции WebRTC, не относящиеся к их текущему проекту, и хотят, чтобы WebRTC был проще. Проблема заключается в том, что у каждого свой набор вариантов использования. Коммуникации в реальном времени имеют богатую историю с множеством людей, создающих различные вещи.
Эта глава содержит интервью с авторами протоколов, составляющих WebRTC. Она дает представление о проектных решениях при создании каждого протокола и заканчивается интервью о самом WebRTC.</description></item><item><title>Часто задаваемые вопросы</title><link>https://webrtcforthecurious.com/ru/docs/11-faq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://webrtcforthecurious.com/ru/docs/11-faq/</guid><description>Часто задаваемые вопросы # Почему WebRTC использует UDP? Обход NAT требует использования UDP. Без обхода NAT установление однорангового P2P-соединения было бы невозможно. UDP не обеспечивает &amp;ldquo;гарантированную доставку&amp;rdquo;, как TCP, поэтому WebRTC реализует её на уровне пользователя.
Подробнее смотрите в разделе Подключение.
Сколько каналов данных я могу иметь? 65534 канала, так как идентификатор потока имеет 16 бит. Вы можете закрывать и открывать новые каналы в любое время. Налагает ли WebRTC ограничения пропускной способности?</description></item><item><title>Глоссарий</title><link>https://webrtcforthecurious.com/ru/docs/12-glossary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://webrtcforthecurious.com/ru/docs/12-glossary/</guid><description>Глоссарий # ACK: Подтверждение AVP: Профиль аудио и видео B-кадр: Двунаправленный предсказанный кадр. Частичное изображение, являющееся модификацией предыдущих и будущих изображений. DCEP: Протокол установления канала данных, определен в RFC 8832 DeMux: Демультиплексор DLSR: Задержка с момента последнего отчета отправителя DTLS: Безопасность транспортного уровня для датаграмм, определен в RFC 6347 E2E: От конца до конца FEC: Упреждающая коррекция ошибок FIR: Запрос полного внутрикадрового обновления G.711: Узкополосный аудиокодек GCC: Контроль перегрузки Google, определен в draft-ietf-rmcat-gcc-02 H.</description></item><item><title>Справочник</title><link>https://webrtcforthecurious.com/ru/docs/13-reference/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://webrtcforthecurious.com/ru/docs/13-reference/</guid><description>Справочник # WebRTC (W3C) # WebRTC 1.0: Коммуникации в реальном времени между браузерами [26 января 2021] (Статус: Рекомендация) Рабочая группа по веб-коммуникациям в реальном времени - Публикации WebRTC (RFC) # RFC8825: Обзор: Протоколы реального времени для браузерных приложений Х. Альвестранд [Январь 2021] (Статус: ПРЕДЛАГАЕМЫЙ СТАНДАРТ) RFC8826: Соображения безопасности для WebRTC Э. Решкорла [Январь 2021] (Статус: ПРЕДЛАГАЕМЫЙ СТАНДАРТ) RFC8836: Требования к контролю перегрузки для интерактивных мультимедиа в реальном времени Р. Джесуп, З.</description></item></channel></rss>